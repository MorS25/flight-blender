---
openapi: "3.0.0"
info:
  title: "Flight Blender API specification"
  description: "All APIs for Flight Blender, using these APIS, you can submit raw air traffic observations, geo fencing data, flight declarations in addition to make DSS queries"
  version: "1.0.0"
servers:
- url: "https://virtserver.swaggerhub.com/cygnus2936/flight-blender/1.0.0"
  description: "Flight Blender API Specification"
security:
- flight_blender_service:
  - "write"
  
paths:
  /ping:
    get:
      summary: "Server heartbeat operation"
      description: "This operation is a ping to check if the server is running "
        
      security: []
      responses:
        "200":
          description: "pong" 
        "400":
          $ref: "#/responses/BadRequest400ErrorResponse"
        "401":
          $ref: "#/responses/Unauthorized401ErrorResponse"
        "403":
          $ref: "#/responses/Forbidden403ErrorResponse"
        "500":
          $ref: "#/responses/Standard500ErrorResponse"

          
  /set_air_traffic:
    post:
      summary: "Add Airtraffic observation"
      description: "Submit air traffic data to the service, after submission, Flight Blender will \
        \ normalizes the data and eventually send it to Flight Spotlight. A single or multiple observation can be submitted at a given time"

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties: 
                observations: 
                  $ref: '#/components/definitions/ArrayOfObservations'

      responses:
        "200":
          description: "OK"
        "201":
          description: "Airtraffic data added"
        "400":
          $ref: "#/responses/BadRequest400ErrorResponse"
        "401":
          $ref: "#/responses/Unauthorized401ErrorResponse"
        "403":
          $ref: "#/responses/Forbidden403ErrorResponse"
        "500":
          $ref: "#/responses/Standard500ErrorResponse"


  /set_flight_declaration:
    post:
      summary: "Add a Flight Declaration"
      description: "Submit a Flight Declaration into Flight Blender  \
        \ A flight declaration can be upto 24 hours in advance and follows the Flight Declaration format etc."

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlightDeclarationJSON'

      responses:
        "200":
          description: "OK"
        "201":
          description: "Geofence Created"
        "400":
          $ref: "#/responses/BadRequest400ErrorResponse"
        "401":
          $ref: "#/responses/Unauthorized401ErrorResponse"
        "403":
          $ref: "#/responses/Forbidden403ErrorResponse"
        "500":
          $ref: "#/responses/Standard500ErrorResponse"
 


  /set_geo_fence:
    post:
      summary: "Add a Geofence"
      description: "Submit a Geofence declaration which is in turn submitted to  \
        \ Flight Spotlight. Geofence can be used to specify areas of interest, restricted areas, constraints etc."

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeoFenceGeoJSON'

      responses:
        "200":
          description: "OK"
        "201":
          description: "Geofence Created"
        "400":
          $ref: "#/responses/BadRequest400ErrorResponse"
        "401":
          $ref: "#/responses/Unauthorized401ErrorResponse"
        "403":
          $ref: "#/responses/Forbidden403ErrorResponse"
        "500":
          $ref: "#/responses/Standard500ErrorResponse"
 

components:
  securitySchemes:
    flight_blender_service:
      type: "oauth2"
      flows:
        clientCredentials:
          tokenUrl: "http://id.openskies.sh/oauth/token"
          scopes:
            write: "Write data into Flight Blender"

  schemas:
    FlightDeclarationJSON: 
        type: object
        required:
          - flight_declaration
        properties:
          exchange_type:
            type: string
            enum:
              - flight_declaration
          flight_id:
            type: string
            format: uuid
          plan_id:
            type: string
            format: uuid   
          flight_state:
            type: number
          sequence_number:
            type: number
          flight_declaration:
            type: object
            properties:
              parts:
                type: object   
                $ref: '#/components/schemas/FlightDeclarationFeatureGeoJSON'
              

    FlightDeclarationFeatureGeoJSON:
        type: object
        required:
          - type
          - geometry
          - properties
        properties:
          type:
            type: string
            enum:
              - Feature
          geometry:
            $ref: '#/components/schemas/FlightDeclarationGeometryGeoJSON'
            
          properties:
            type: object
            properties:
              start_time:
                type: string
                format: date-time
              end_time:
                type: string   
                format: date-time
              max_altitude:
                type: object
                properties:
                  metres:
                    type: number
                  datum:
                    type: string
                    enum:
                      - "WGS84"
              min_altitude:
                type: object
                properties:
                  metres:
                    type: number
                  datum:
                    type: string
                    enum:
                      - "WGS84"
              
            nullable: true
          id:
            oneOf:
              - type: string
              - type: integer


    GeoFenceGeoJSON:
        type: object
        required:
          - type
          - features
        properties:
          type:
            type: string
            enum:
              - FeatureCollection
          features:
            type: array
            items:
              $ref: '#/components/schemas/GeoFenceFeatureGeoJSON'

    Point2D:
      type: array
      maxItems: 2
      minItems: 2
      items:
        type: number
        
    GeoFenceFeatureGeoJSON:
        type: object
        required:
          - type
          - geometry
          - properties
        properties:
          type:
            type: string
            enum:
              - Feature
          geometry:
            $ref: '#/components/schemas/GeoFenceGeometryGeoJSON'
            
          properties:
            type: object
            properties:
              upper_limit:
                type: number     
                format: float
              lower_limit:
                type: number     
                format: float
              
            nullable: true
          id:
            oneOf:
              - type: string
              - type: integer

    FlightDeclarationGeometryGeoJSON:
        type: object
        required:
          - type
        properties:
          type:
            type: string
            enum:
              - Polygon
              - MultiPolygon
              - LineString
              
          coordinates:
            type: array
            items:
              $ref: '#/components/schemas/Point2D' 
    GeoFenceGeometryGeoJSON:
        type: object
        required:
          - type
        properties:
          type:
            type: string
            enum:
              - Polygon
              - MultiPolygon
              
              
          coordinates:
            type: array
            items:
              $ref: '#/components/schemas/Point2D'            
      
  definitions:
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: string
        message:
          type: string   
          
    ArrayOfObservations:     
      type: array
      items:
        type: object
        required:
          - lon_dd
          - lat_dd
          - timestamp
          - altitude_mm
          - icao_address
        
        properties:
          lon_dd:
            type: number     
            format: float
          lat_dd:
            type: number  
            format: float
          timestamp:
            type: integer      
            format: int64
          icao_address:
            type: string
            maxLength: 24
          source_type:
              type: integer
          traffic_source:
              type: integer

responses:
  Standard500ErrorResponse:
    description: An unexpected error occured.
    schema:
      $ref: "#/components/definitions/Error"
      
  BadRequest400ErrorResponse:
    description: The JSON is not valid
    schema:
      $ref: "#/components/definitions/Error"
 
  Unauthorized401ErrorResponse:
    description: The request requires an user authentication
    schema:
      $ref: "#/components/definitions/Error"
      
  Forbidden403ErrorResponse:
    description: the access is not allowed
    schema:
      $ref: "#/components/definitions/Error"